# Copyright (c) 2022 Uber Technologies, Inc.
# 
# <p>Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of the License at
# <p>http://www.apache.org/licenses/LICENSE-2.0
# 
# <p>Unless required by applicable law or agreed to in writing, software distributed under the
# License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing permissions and
# limitations under the License.

# This file contains rules to the specific feature flag API.

#
# For @stale_flag_name = stale_flag and @treated = true
# Before 
#   TestEnum.stale_flag.isEnabled
# After 
#   true
#

[[rules]]
name = "replace_isToggleEnabled_with_boolean_literal"
query = """(
(navigation_expression
        target: (navigation_expression
            target: (simple_identifier)
            suffix: (navigation_suffix
                suffix: (simple_identifier) @param))
        suffix: (navigation_suffix
            suffix: (simple_identifier) @access_identifier)) @parameter_access
(#eq? @param "@stale_flag")
(#eq? @access_identifier "isEnabled")
)"""
replace_node = "parameter_access"
replace = "@treated"
holes = ["stale_flag", "treated"]
groups = ["replace_expression_with_boolean_literal"]

#
# For @stale_flag_name = stale_flag and @treated = true
# Before 
#   !TestEnum.stale_flag.isEnabled
# After 
#   false
#

[[rules]]
name = "replace_isToggleDisabled_with_boolean_literal"
query = """(
(navigation_expression
        target: (navigation_expression
            target: (prefix_expression
                operation: (bang))
            suffix: (navigation_suffix
                suffix: (simple_identifier) @param))
        suffix: (navigation_suffix
            suffix: (simple_identifier) @access_identifier)) @parameter_access
(#eq? @param "@stale_flag")
(#eq? @access_identifier "isEnabled")
)"""
replace_node = "parameter_access"
replace = "@treated_complement"
holes = ["stale_flag", "treated_complement"]
groups = ["replace_expression_with_boolean_literal"]
