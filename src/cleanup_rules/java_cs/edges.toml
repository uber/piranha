
# Copyright (c) 2023 Uber Technologies, Inc.
# 
# <p>Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of the License at
# <p>http://www.apache.org/licenses/LICENSE-2.0
# 
# <p>Unless required by applicable law or agreed to in writing, software distributed under the
# License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing permissions and
# limitations under the License.

# The edges in this file specify the flow between the rules.

[[edges]]
scope = "Parent"
from = "replace_expression_with_boolean_literal"
to = ["boolean_literal_cleanup"]

[[edges]]
scope = "Parent"
from = "boolean_literal_cleanup"
to = ["boolean_expression_simplify", "statement_cleanup"]

[[edges]]
scope = "Parent"
from = "boolean_expression_simplify"
to = ["boolean_literal_cleanup"]

[[edges]]
scope = "Parent"
from = "delete_enum_entry"
to = ["delete_empty_enum_declaration"]


[[edges]]
scope = "Parent"
from = "delete_empty_enum_declaration"
to = ["delete_file_with_no_type_declarations"]


[[edges]]
scope = "Parent"
from = "statement_cleanup"
to = [
  "if_cleanup",
  "delete_variable_declaration",
  "delete_field_declaration",
  "delete_parent_assignment",
]

[[edges]]
scope = "Parent"
from = "if_cleanup"
to = ["remove_unnecessary_nested_block"]

[[edges]]
scope = "Parent"
from = "remove_unnecessary_nested_block"
to = ["delete_all_statements_after_return"]

[[edges]]
scope = "Parent"
from = "replace_identifier_with_value"
to = ["boolean_literal_cleanup"]

[[edges]]
scope = "Method"
from = "delete_variable_declaration"
to = [
  "replace_identifier_with_value",
  "delete_boolean_assignments_for_variable",
]

# Another workflow for inline variable
[[edges]]
scope = "Method"
from = "delete_parent_assignment"
to = ["delete_variable_declaration"]

[[edges]]
scope = "Class"
from = "delete_field_declaration"
to = [
  "replace_identifier_with_value",
  "delete_boolean_assignments_for_variable",
]


# Another workflow for inline field
[[edges]]
scope = "Class"
from = "delete_parent_assignment"
to = ["delete_field_declaration"]
