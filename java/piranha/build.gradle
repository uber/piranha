/*
 * Copyright (C) 2017-2018. Uber Technologies Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import net.ltgt.gradle.errorprone.CheckSeverity

plugins {
  id "java"
  // For code coverage:
  id 'jacoco'
  id 'com.github.nbaztec.coveralls-jacoco'
  // For NullAway, just in case
  id "net.ltgt.errorprone"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

dependencies {
    compileOnly deps.apt.autoService
    annotationProcessor deps.apt.autoService

    compileOnly deps.build.errorProneCheckApi
    implementation deps.build.googleJsonSimple

    testCompile deps.test.junit4
    testCompile deps.test.daggerAnnotations
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
    testImplementation group: 'org.easymock', name: 'easymock', version: '4.3'
    testCompile(deps.build.errorProneTestHelpers) {
        exclude group: "junit", module: "junit"
    }

    // Check with NullAway
    annotationProcessor deps.build.nullaway
    compileOnly deps.build.jsr305Annotations
    compileOnly deps.build.inferAnnotations // @Initializer annotation

    errorprone deps.build.errorProneCore
    errorproneJavac deps.build.errorProneJavac
}

tasks.withType(JavaCompile) {
  // remove the if condition if you want to run NullAway on test code
  if (!name.toLowerCase().contains("test")) {
    options.errorprone {
      check("NullAway", CheckSeverity.ERROR)
      option("NullAway:AnnotatedPackages", "com.uber")
    }
  }
}

javadoc {
    failOnError = false
}

jacoco {
  toolVersion = "0.8.2"
}

test {
  maxHeapSize = "1024m"
  if (!JavaVersion.current().java9Compatible) {
    jvmArgs "-Xbootclasspath/p:${configurations.errorproneJavac.asPath}"
  }
}

apply from: rootProject.file("gradle/gradle-mvn-push.gradle")

// From https://github.com/kt3k/coveralls-gradle-plugin
jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

coverallsJacoco {
    reportPath = "${project.projectDir}/build/reports/jacoco/test/jacocoTestReport.xml"
}
