# Copyright (c) 2023 Uber Technologies, Inc.
#
# <p>Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of the License at
# <p>http://www.apache.org/licenses/LICENSE-2.0
#
# <p>Unless required by applicable law or agreed to in writing, software distributed under the
# License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing permissions and
# limitations under the License.

# The language specific rules in this file are applied after the API specific change has been performed.

# The edges in this file specify the flow between the rules.

[[edges]]
scope = "Parent"
from = "replace_expression_with_boolean_literal"
to = ["boolean_literal_cleanup", "statement_cleanup"]

### boolean_literal_cleanup
[[edges]]
scope = "Parent"
from = "boolean_literal_cleanup"
to = ["boolean_expression_simplify", "statement_cleanup"]

[[edges]]
scope = "Parent"
from = "boolean_expression_simplify"
to = ["boolean_literal_cleanup"]

[[edges]]
scope = "Parent"
from = "statement_cleanup"
to = ["if_cleanup"]

### statement_cleanup
[[edges]]
scope = "Function-Method"
from = "statement_cleanup"
to = ["delete_variable_declaration", "delete_variable_declaration_with_nil"]

[[edges]]
scope = "Function-Method"
from = "delete_variable_declaration_with_nil"
to = ["replace_identifier_with_value", "replace_identifier_with_nil"]

[[edges]]
scope = "Parent"
from = "replace_identifier_with_nil"
to = ["simplify_identity_equal", "simplify_identity_not_equal"]


[[edges]]
scope = "Function-Method"
from = "delete_variable_declaration"
to = ["replace_identifier_with_value"]

[[edges]]
scope = "Parent"
from = "replace_identifier_with_value"
to = ["boolean_literal_cleanup"]


### if_cleanup
[[edges]]
scope = "Parent"
from = "if_cleanup"
to = ["remove_unnecessary_nested_block"]

[[edges]]
scope = "Parent"
from = "remove_unnecessary_nested_block"
to = ["return_statement_cleanup"]

# Cycle to circumvent `delete_statement_after_return` only removing one match at a time
[[edges]]
scope = "Parent"
from = "return_statement_cleanup"
to = ["delete_statement_after_return"]

[[edges]]
scope = "Parent"
from = "delete_statement_after_return"
to = ["return_statement_cleanup"]
