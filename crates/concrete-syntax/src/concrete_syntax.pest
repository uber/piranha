// Concrete Syntax Grammar for Piranha
concrete_syntax = { SOI ~ pattern ~ EOI }
pattern = { (element)+ ~ ("|>" ~ constraints)? }

// An element is either a capture or literal text
element = _{ capture | literal_text }

// Captures: :[name], :[name+], :[name*], @name
capture = { (":[" ~ identifier ~ capture_mode? ~ "]") | "@"~identifier } // FIXME: Should remove @ from the grammar, because literals may be parsed incorrectly
capture_mode = { "+" | "*" }
identifier = { (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

// Literal text - single word/token without whitespace
literal_text = { (!( ":[" | "|>" | "@" ) ~ ANY)+ }
WHITESPACE = _{ (" " | "\t" | "\r" | "\n")+ }

// Where constraints (extensible for future constraint types)
constraints = { constraint ~ ("," ~ constraint)* }
constraint = { in_constraint | regex_constraint }
in_constraint = { capture ~ "in" ~ "[" ~ list_items? ~ "]" }
regex_constraint = { capture ~ "matches" ~ regex_pattern }
list_items = { quoted_string ~ ("," ~ quoted_string)* }
quoted_string = { "\"" ~ ( "\\\\" | "\\\"" | (!"\"" ~ ANY) )* ~ "\"" }
regex_pattern = { "/" ~ regex_content ~ "/" }
regex_content = { ( "\\/" | (!"/" ~ ANY) )* }
